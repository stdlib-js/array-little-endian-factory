{
  "version": 3,
  "sources": ["../lib/from_iterator.js", "../lib/from_iterator_map.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {Array} output array\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tout.push( v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIterator;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {Array} output array\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tout.push( clbk.call( thisArg, v.value, i ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromIteratorMap;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable max-len, no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar isObject = require( '@stdlib/assert-is-object' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar hasIteratorSymbolSupport = require( '@stdlib/assert-has-iterator-symbol-support' );\nvar ITERATOR_SYMBOL = require( '@stdlib/symbol-iterator' );\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar getter = require( '@stdlib/array-base-getter' );\nvar accessorGetter = require( '@stdlib/array-base-accessor-getter' );\nvar inherits = require( '@stdlib/utils-inherit' );\nvar fixedEndianFactory = require( '@stdlib/array-fixed-endian-factory' );\nvar bytesPerElement = require( '@stdlib/ndarray-base-bytes-per-element' );\nvar capitalize = require( '@stdlib/string-base-capitalize' );\nvar format = require( '@stdlib/string-format' );\nvar fromIterator = require( './from_iterator.js' );\nvar fromIteratorMap = require( './from_iterator_map.js' );\n\n\n// VARIABLES //\n\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\nvar BYTE_ORDER = 'little-endian';\nvar DTYPE2SET = {\n\t'float64': 'setFloat64',\n\t'float32': 'setFloat32',\n\t'int32': 'setInt32',\n\t'int16': 'setInt16',\n\t'uint32': 'setUint32',\n\t'uint16': 'setUint16'\n};\nvar CHAR2ARTICLE = {\n\t'c': 'a',\n\t'f': 'a',\n\t'i': 'an',\n\t'u': 'a',\n\t'b': 'a'\n};\n\n\n// FUNCTIONS //\n\n/**\n* Converts a data type string to a constructor name.\n*\n* @private\n* @param {string} dtype - data type\n* @returns {string} constructor name\n*\n* @example\n* var n = dtype2ctor( 'float64' );\n* // returns 'Float64ArrayLE'\n*\n* @example\n* var n = dtype2ctor( 'int32' );\n* // returns 'Int32ArrayLE'\n*/\nfunction dtype2ctor( dtype ) {\n\treturn capitalize( dtype ) + 'ArrayLE';\n}\n\n\n// MAIN //\n\n/**\n* Returns a typed array constructor for creating typed arrays stored in little-endian byte order.\n*\n* @param {string} dtype - typed array data type\n* @throws {TypeError} first argument must be a supported data type\n* @returns {Function} typed array constructor\n*\n* @example\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var arr = new Float64ArrayLE();\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var arr = new Float64ArrayLE( 2 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var arr = new Float64ArrayLE( [ 1.0, 2.0 ] );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n*\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayLE( buf );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n*\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayLE( buf, 8 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n*\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Float64ArrayLE( buf, 8, 2 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*/\nfunction factory( dtype ) {\n\tvar BYTES_PER_ELEMENT;\n\tvar CTOR_NAME;\n\tvar SETTER;\n\tvar parent;\n\n\t// Defer `dtype` validation to `fixedEndianFactory`:\n\tparent = fixedEndianFactory( dtype );\n\n\tBYTES_PER_ELEMENT = bytesPerElement( dtype );\n\tCTOR_NAME = dtype2ctor( dtype );\n\tSETTER = DTYPE2SET[ dtype ];\n\n\t/**\n\t* Typed array constructor which returns a typed array representing an array of values in little-endian byte order.\n\t*\n\t* @private\n\t* @constructor\n\t* @param {(NonNegativeInteger|Collection|ArrayBuffer|Iterable)} [arg] - length, typed array, array-like object, buffer, or an iterable\n\t* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n\t* @param {NonNegativeInteger} [length] - view length\n\t* @throws {TypeError} if provided only one argument, the argument must be a valid argument\n\t* @throws {TypeError} byte offset must be a nonnegative integer\n\t* @throws {RangeError} must provide sufficient memory to accommodate byte offset and view length requirements\n\t* @returns {TypedArray} typed array instance\n\t*/\n\tfunction TypedArray() {\n\t\tvar nargs = arguments.length;\n\t\tif ( !(this instanceof TypedArray) ) {\n\t\t\tif ( nargs === 0 ) {\n\t\t\t\treturn new TypedArray();\n\t\t\t}\n\t\t\tif ( nargs === 1 ) {\n\t\t\t\treturn new TypedArray( arguments[0] );\n\t\t\t}\n\t\t\tif ( nargs === 2 ) {\n\t\t\t\treturn new TypedArray( arguments[0], arguments[1] );\n\t\t\t}\n\t\t\treturn new TypedArray( arguments[0], arguments[1], arguments[2] );\n\t\t}\n\t\tif ( nargs === 0 ) {\n\t\t\tparent.call( this, BYTE_ORDER );\n\t\t} else if ( nargs === 1 ) {\n\t\t\tparent.call( this, BYTE_ORDER, arguments[0] );\n\t\t} else if ( nargs === 2 ) {\n\t\t\tparent.call( this, BYTE_ORDER, arguments[0], arguments[1] );\n\t\t} else if ( nargs === 3 ) {\n\t\t\tparent.call( this, BYTE_ORDER, arguments[0], arguments[1], arguments[2] );\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t* Size (in bytes) of each array element.\n\t*\n\t* @private\n\t* @name BYTES_PER_ELEMENT\n\t* @memberof TypedArray\n\t* @readonly\n\t* @type {PositiveInteger}\n\t*/\n\tsetReadOnly( TypedArray, 'BYTES_PER_ELEMENT', BYTES_PER_ELEMENT );\n\n\t/**\n\t* Constructor name.\n\t*\n\t* @private\n\t* @name name\n\t* @memberof TypedArray\n\t* @readonly\n\t* @type {string}\n\t*/\n\tsetReadOnly( TypedArray, 'name', CTOR_NAME );\n\n\t/**\n\t* Creates a new typed array from an array-like object or an iterable.\n\t*\n\t* @private\n\t* @name from\n\t* @memberof TypedArray\n\t* @type {Function}\n\t* @param {(Collection|Iterable)} src - array-like object or iterable\n\t* @param {Function} [clbk] - callback to invoke for each source element\n\t* @param {*} [thisArg] - context\n\t* @throws {TypeError} `this` context must be a constructor\n\t* @throws {TypeError} `this` must be a typed array constructor\n\t* @throws {TypeError} first argument must be an array-like object or an iterable\n\t* @throws {TypeError} second argument must be a function\n\t* @returns {TypedArray} typed array instance\n\t*/\n\tsetReadOnly( TypedArray, 'from', function from( src ) {\n\t\tvar thisArg;\n\t\tvar nargs;\n\t\tvar clbk;\n\t\tvar out;\n\t\tvar buf;\n\t\tvar tmp;\n\t\tvar get;\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isFunction( this ) ) {\n\t\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t\t}\n\t\tif ( !isTypedArrayConstructor( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\tnargs = arguments.length;\n\t\tif ( nargs > 1 ) {\n\t\t\tclbk = arguments[ 1 ];\n\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t\t}\n\t\t\tif ( nargs > 2 ) {\n\t\t\t\tthisArg = arguments[ 2 ];\n\t\t\t}\n\t\t}\n\t\tif ( isCollection( src ) ) {\n\t\t\tif ( clbk ) {\n\t\t\t\tlen = src.length;\n\t\t\t\tif ( src.get && src.set ) {\n\t\t\t\t\tget = accessorGetter( 'default' );\n\t\t\t\t} else {\n\t\t\t\t\tget = getter( 'default' );\n\t\t\t\t}\n\t\t\t\tout = new this( len );\n\t\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tbuf[ SETTER ]( i*BYTES_PER_ELEMENT, clbk.call( thisArg, get( src, i ), i ), true );\n\t\t\t\t}\n\t\t\t\treturn out;\n\t\t\t}\n\t\t\treturn new this( src );\n\t\t}\n\t\tif ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) {\n\t\t\tbuf = src[ ITERATOR_SYMBOL ]();\n\t\t\tif ( !isFunction( buf.next ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t\t}\n\t\t\tif ( clbk ) {\n\t\t\t\ttmp = fromIteratorMap( buf, clbk, thisArg );\n\t\t\t} else {\n\t\t\t\ttmp = fromIterator( buf );\n\t\t\t}\n\t\t\tlen = tmp.length;\n\t\t\tout = new this( len );\n\t\t\tbuf = out._buffer; // eslint-disable-line no-underscore-dangle\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tbuf[ SETTER ]( i*BYTES_PER_ELEMENT, tmp[ i ], true );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t});\n\n\t/**\n\t* Creates a new typed array from a variable number of arguments.\n\t*\n\t* @private\n\t* @name of\n\t* @memberof TypedArray\n\t* @type {Function}\n\t* @param {...*} element - array elements\n\t* @throws {TypeError} `this` context must be a constructor\n\t* @throws {TypeError} `this` must be a typed array constructor\n\t* @returns {TypedArray} typed array instance\n\t*/\n\tsetReadOnly( TypedArray, 'of', function of() {\n\t\tvar args;\n\t\tvar i;\n\t\tif ( !isFunction( this ) ) {\n\t\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t\t}\n\t\tif ( !isTypedArrayConstructor( this ) ) {\n\t\t\tthrow new TypeError( format( 'invalid invocation. `this` is not %s %s.', CHAR2ARTICLE[ dtype[0] ], CTOR_NAME ) );\n\t\t}\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn new this( args );\n\t});\n\n\t// Inherit from the parent constructor:\n\tinherits( TypedArray, parent );\n\n\treturn TypedArray;\n\n\t/**\n\t* Returns a boolean indicating if a value is a typed array constructor.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating if a value is a typed array constructor\n\t*/\n\tfunction isTypedArrayConstructor( value ) {\n\t\treturn ( value === TypedArray );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a typed array constructor for creating typed arrays stored in little-endian byte order.\n*\n* @module @stdlib/array-little-endian-factory\n*\n* @example\n* var factory = require( '@stdlib/array-little-endian-factory' );\n*\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var arr = new Float64ArrayLE();\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 0\n*\n* @example\n* var factory = require( '@stdlib/array-little-endian-factory' );\n*\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var arr = new Float64ArrayLE( 2 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var factory = require( '@stdlib/array-little-endian-factory' );\n*\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var arr = new Float64ArrayLE( [ 1.0 ] );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var factory = require( '@stdlib/array-little-endian-factory' );\n*\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayLE( buf );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var factory = require( '@stdlib/array-little-endian-factory' );\n*\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 16 );\n* var arr = new Float64ArrayLE( buf, 8 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 1\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var factory = require( '@stdlib/array-little-endian-factory' );\n*\n* var Float64ArrayLE = factory( 'float64' );\n*\n* var buf = new ArrayBuffer( 32 );\n* var arr = new Float64ArrayLE( buf, 8, 2 );\n* // returns <Float64ArrayLE>\n*\n* var len = arr.length;\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_from_iterator", "__commonJSMin", "exports", "module", "fromIterator", "it", "out", "v", "require_from_iterator_map", "__commonJSMin", "exports", "module", "fromIteratorMap", "it", "clbk", "thisArg", "out", "v", "i", "require_main", "__commonJSMin", "exports", "module", "isCollection", "isObject", "isFunction", "hasIteratorSymbolSupport", "ITERATOR_SYMBOL", "setReadOnly", "getter", "accessorGetter", "inherits", "fixedEndianFactory", "bytesPerElement", "capitalize", "format", "fromIterator", "fromIteratorMap", "HAS_ITERATOR_SYMBOL", "BYTE_ORDER", "DTYPE2SET", "CHAR2ARTICLE", "dtype2ctor", "dtype", "factory", "BYTES_PER_ELEMENT", "CTOR_NAME", "SETTER", "parent", "TypedArray", "nargs", "src", "thisArg", "clbk", "out", "buf", "tmp", "get", "len", "isTypedArrayConstructor", "args", "i", "value", "main"]
}
